{"version":3,"sources":["pages/homepage.jsx","App.js","reportWebVitals.js","index.js"],"names":["waveColors","color","Homepage","windowHeight","Math","max","window","innerHeight","innerWidth","onresize","location","reload","useState","animationState","setAnimationState","waveColor","setWaveColor","colorSwap","setColorSwap","changeWaveColor","length","useEffect","document","getElementById","classList","remove","setTimeout","Container","style","height","className","onClick","onMouseOver","data-word","id","onMouseLeave","href","waves","keyframes","styled","div","props","statementOpacity","buttonOpacity","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"guNAGA,IAEMA,EAAa,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,WAEIC,EAAQ,QAEC,SAASC,IACtB,IAAMC,EAAeC,KAAKC,IAAIC,OAAOC,YAAaD,OAAOE,WAAa,EAAG,KACzEF,OAAOG,SAAW,WAChBH,OAAOI,SAASC,UAHe,MAMWC,mBAAS,WANpB,mBAM1BC,EAN0B,KAMVC,EANU,OAOCF,mBAAS,GAPV,mBAO1BG,EAP0B,KAOfC,EAPe,OAQCJ,oBAAS,GARV,mBAQ1BK,EAR0B,KAQfC,EARe,KAgBjC,SAASC,IACPH,GAAcD,EAAY,GAAKf,EAAWoB,QAc5C,OAJAC,qBAAU,WANRC,SAASC,eAAe,UAAUC,UAAUC,OAAO,QACnDC,YAAW,WACTJ,SAASC,eAAe,eAAeC,UAAUC,OAAO,UACvD,QAQH,eAACE,EAAD,CACEd,eAAgBA,EAChBI,UAAWA,EACXF,UAAWf,EAAWe,GACtBa,MAAO,CAAEC,OAAO,GAAD,OAAK1B,EAAL,OAJjB,UAME,yBAAS2B,UAAU,aAAnB,SACE,mCACE,oBACEC,QAAS,kBAAMb,GAAcD,IAC7Ba,UAAU,eACVE,YAAab,EACbc,YAAU,yBAJZ,oCAQA,oBACEF,QAASZ,EACTW,UAAU,eACVG,YAAU,aAHZ,6BASJ,oBAAIC,GAAG,SAASJ,UAAU,OAA1B,sCA4BA,mBACEI,GAAG,cACHJ,UAAU,OACVE,YAAa,WA7EjBlB,EAAkB,WA8EdqB,aAAc,WA3ElBrB,EAAkB,YA4EdsB,KAAK,2BALP,8BAaN,IAAMC,EAAQC,YAAH,KAuBEX,EAAYY,IAAOC,IAAV,IAtIF,UACA,WA+IP,SAACC,GAAD,OAAYA,EAAMxB,UAAY,SAACwB,GAAD,OAAWA,EAAM1B,WAAYd,IAMlDoC,GACM,SAACI,GAAD,OAAWA,EAAM5B,kBAOhC,SAAC4B,GAAD,OAAYA,EAAMxB,UAAYhB,EAAQ,SAACwC,GAAD,OAAWA,EAAM1B,cAuClD,SAAC0B,GAAD,OAAWA,EAAMC,oBAGtB,SAACD,GAAD,OAAYA,EAAMxB,UAAY,SAACwB,GAAD,OAAWA,EAAM1B,WAAYd,KAMzD,SAACwC,GAAD,OAAWA,EAAME,iBAInB,SAACF,GAAD,OAAYA,EAAMxB,UAAY,SAACwB,GAAD,OAAWA,EAAM1B,WAAYd,KAEhE,SAACwC,GAAD,OAAYA,EAAMxB,UAAY,SAACwB,GAAD,OAAWA,EAAM1B,WAAYd,KAMzC,SAACwC,GAAD,OAClBA,EAAMxB,UAAYhB,EAAQ,SAACwC,GAAD,OAAWA,EAAM1B,cCnNpC6B,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC5B,EAAD,OCMS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BsB,M","file":"static/js/main.2b230eff.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst background1 = \"#202020\";\nconst background2 = \"#17486d\";\nconst waveColors = [\n  \"#a0a0a0\",\n  \"#d55563\",\n  \"#8d8d69\",\n  \"#c9a4a0\",\n  \"#ae8094\",\n  \"#dc9787\",\n  \"#86c2bd\",\n];\nconst color = \"white\";\n\nexport default function Homepage() {\n  const windowHeight = Math.max(window.innerHeight, window.innerWidth / 2, 450);\n  window.onresize = function () {\n    window.location.reload();\n  };\n\n  const [animationState, setAnimationState] = useState(\"running\");\n  const [waveColor, setWaveColor] = useState(0);\n  const [colorSwap, setColorSwap] = useState(false);\n\n  function mouseOverCompany() {\n    setAnimationState(\"paused\");\n  }\n  function mouseLeaveCompany() {\n    setAnimationState(\"running\");\n  }\n  function changeWaveColor() {\n    setWaveColor((waveColor + 1) % waveColors.length);\n  }\n\n  function removeHiddenElements() {\n    document.getElementById(\"slogan\").classList.remove(\"hide\");\n    setTimeout(() => {\n      document.getElementById(\"toDeveloper\").classList.remove(\"hide\");\n    }, 2000);\n  }\n\n  useEffect(() => {\n    removeHiddenElements();\n  });\n\n  return (\n    <Container\n      animationState={animationState}\n      colorSwap={colorSwap}\n      waveColor={waveColors[waveColor]}\n      style={{ height: `${windowHeight}px` }}\n    >\n      <section className=\"waves-demo\">\n        <button>\n          <h1\n            onClick={() => setColorSwap(!colorSwap)}\n            className=\"screen waves\"\n            onMouseOver={changeWaveColor}\n            data-word=\"intangible engineering\"\n          >\n            intangible engineering\n          </h1>\n          <h1\n            onClick={changeWaveColor}\n            className=\"mobile waves\"\n            data-word=\"intangible\"\n          >\n            intangible\n          </h1>\n        </button>\n      </section>\n      <h3 id=\"slogan\" className=\"hide\">\n        WEB DEVELOPMENT SERVICES\n        {/* <span className=\"vibrate\">W</span>\n        <span className=\"vibrate\">E</span>\n        <span className=\"vibrate\">B</span>\n        <span> </span>\n        <span className=\"vibrate\">D</span>\n        <span className=\"vibrate\">E</span>\n        <span className=\"vibrate\">V</span>\n        <span className=\"vibrate\">E</span>\n        <span className=\"vibrate\">L</span>\n        <span className=\"vibrate\">O</span>\n        <span className=\"vibrate\">P</span>\n        <span className=\"vibrate\">M</span>\n        <span className=\"vibrate\">E</span>\n        <span className=\"vibrate\">N</span>\n        <span className=\"vibrate\">T</span>\n        <span> </span>\n        <span className=\"vibrate\">S</span>\n        <span className=\"vibrate\">E</span>\n        <span className=\"vibrate\">R</span>\n        <span className=\"vibrate\">V</span>\n        <span className=\"vibrate\">I</span>\n        <span className=\"vibrate\">C</span>\n        <span className=\"vibrate\">E</span>\n        <span className=\"vibrate\">S</span> */}\n      </h3>\n      {/* <h3>Providers of simple, intuitive and easy to use applications</h3> */}\n      <a\n        id=\"toDeveloper\"\n        className=\"hide\"\n        onMouseOver={() => mouseOverCompany()}\n        onMouseLeave={() => mouseLeaveCompany()}\n        href=\"https://jamesgrantham.me\"\n      >\n        the developer\n      </a>\n    </Container>\n  );\n}\n\nconst waves = keyframes`\n0%, 100% { clip-path: polygon(0% 68%, 5% 70%, 10% 72%, 15% 74%, 20% 75%, 25% 75%, 30% 75%, 35% 74%, 40% 72%, 45% 70%, 50% 68%, 55% 65%, 60% 63%, 65% 61%, 70% 60%, 75% 60%, 80% 60%, 85% 61%, 90% 63%,100% 65%, 100% 100%, 0% 100%);  }\n      95% { clip-path: polygon(0% 70%, 5% 72%, 10% 74%, 15% 75%, 20% 75%, 25% 75%, 30% 74%, 35% 72%, 40% 70%, 45% 68%, 50% 65%, 55% 63%, 60% 61%, 65% 60%, 70% 60%, 75% 60%, 80% 61%, 85% 63%, 90% 65%,100% 68%, 100% 100%, 0% 100%);  }\n      90% { clip-path: polygon(0% 72%, 5% 74%, 10% 75%, 15% 75%, 20% 75%, 25% 74%, 30% 72%, 35% 70%, 40% 68%, 45% 65%, 50% 63%, 55% 61%, 60% 60%, 65% 60%, 70% 60%, 75% 61%, 80% 63%, 85% 65%, 90% 68%,100% 70%, 100% 100%, 0% 100%);  }\n      85% { clip-path: polygon(0% 74%, 5% 75%, 10% 75%, 15% 75%, 20% 74%, 25% 72%, 30% 70%, 35% 68%, 40% 65%, 45% 63%, 50% 61%, 55% 60%, 60% 60%, 65% 60%, 70% 61%, 75% 63%, 80% 65%, 85% 68%, 90% 70%,100% 72%, 100% 100%, 0% 100%);  }\n      80% { clip-path: polygon(0% 75%, 5% 75%, 10% 75%, 15% 74%, 20% 72%, 25% 70%, 30% 68%, 35% 65%, 40% 63%, 45% 61%, 50% 60%, 55% 60%, 60% 60%, 65% 61%, 70% 63%, 75% 65%, 80% 68%, 85% 70%, 90% 72%,100% 74%, 100% 100%, 0% 100%);  }\n      75% { clip-path: polygon(0% 75%, 5% 75%, 10% 74%, 15% 72%, 20% 70%, 25% 68%, 30% 65%, 35% 63%, 40% 61%, 45% 60%, 50% 60%, 55% 60%, 60% 61%, 65% 63%, 70% 65%, 75% 68%, 80% 70%, 85% 72%, 90% 74%,100% 75%, 100% 100%, 0% 100%);  }\n      70% { clip-path: polygon(0% 75%, 5% 74%, 10% 72%, 15% 70%, 20% 68%, 25% 65%, 30% 63%, 35% 61%, 40% 60%, 45% 60%, 50% 60%, 55% 61%, 60% 63%, 65% 65%, 70% 68%, 75% 70%, 80% 72%, 85% 74%, 90% 75%,100% 75%, 100% 100%, 0% 100%);  }\n      65% { clip-path: polygon(0% 74%, 5% 72%, 10% 70%, 15% 68%, 20% 65%, 25% 63%, 30% 61%, 35% 60%, 40% 60%, 45% 60%, 50% 61%, 55% 63%, 60% 65%, 65% 68%, 70% 70%, 75% 72%, 80% 74%, 85% 75%, 90% 75%,100% 75%, 100% 100%, 0% 100%);  }\n      60% { clip-path: polygon(0% 72%, 5% 70%, 10% 68%, 15% 65%, 20% 63%, 25% 61%, 30% 60%, 35% 60%, 40% 60%, 45% 61%, 50% 63%, 55% 65%, 60% 68%, 65% 70%, 70% 72%, 75% 74%, 80% 75%, 85% 75%, 90% 75%,100% 74%, 100% 100%, 0% 100%);  }\n      55% { clip-path: polygon(0% 70%, 5% 68%, 10% 65%, 15% 63%, 20% 61%, 25% 60%, 30% 60%, 35% 60%, 40% 61%, 45% 63%, 50% 65%, 55% 68%, 60% 70%, 65% 72%, 70% 74%, 75% 75%, 80% 75%, 85% 75%, 90% 74%,100% 72%, 100% 100%, 0% 100%);  }\n      50% { clip-path: polygon(0% 68%, 5% 65%, 10% 63%, 15% 61%, 20% 60%, 25% 60%, 30% 60%, 35% 61%, 40% 63%, 45% 65%, 50% 68%, 55% 70%, 60% 72%, 65% 74%, 70% 75%, 75% 75%, 80% 75%, 85% 74%, 90% 72%,100% 70%, 100% 100%, 0% 100%);  }\n      45% { clip-path: polygon(0% 65%, 5% 63%, 10% 61%, 15% 60%, 20% 60%, 25% 60%, 30% 61%, 35% 63%, 40% 65%, 45% 68%, 50% 70%, 55% 72%, 60% 74%, 65% 75%, 70% 75%, 75% 75%, 80% 74%, 85% 72%, 90% 70%,100% 68%, 100% 100%, 0% 100%);  }\n      40% { clip-path: polygon(0% 63%, 5% 61%, 10% 60%, 15% 60%, 20% 60%, 25% 61%, 30% 63%, 35% 65%, 40% 68%, 45% 70%, 50% 72%, 55% 74%, 60% 75%, 65% 75%, 70% 75%, 75% 74%, 80% 72%, 85% 70%, 90% 68%,100% 65%, 100% 100%, 0% 100%);  }\n      35% { clip-path: polygon(0% 61%, 5% 60%, 10% 60%, 15% 60%, 20% 61%, 25% 63%, 30% 65%, 35% 68%, 40% 70%, 45% 72%, 50% 74%, 55% 75%, 60% 75%, 65% 75%, 70% 74%, 75% 72%, 80% 70%, 85% 68%, 90% 65%,100% 63%, 100% 100%, 0% 100%);  }\n      30% { clip-path: polygon(0% 60%, 5% 60%, 10% 60%, 15% 61%, 20% 63%, 25% 65%, 30% 68%, 35% 70%, 40% 72%, 45% 74%, 50% 75%, 55% 75%, 60% 75%, 65% 74%, 70% 72%, 75% 70%, 80% 68%, 85% 65%, 90% 63%,100% 61%, 100% 100%, 0% 100%);  }\n      25% { clip-path: polygon(0% 60%, 5% 60%, 10% 61%, 15% 63%, 20% 65%, 25% 68%, 30% 70%, 35% 72%, 40% 74%, 45% 75%, 50% 75%, 55% 75%, 60% 74%, 65% 72%, 70% 70%, 75% 68%, 80% 65%, 85% 63%, 90% 61%,100% 60%, 100% 100%, 0% 100%);  }\n      20% { clip-path: polygon(0% 60%, 5% 61%, 10% 63%, 15% 65%, 20% 68%, 25% 70%, 30% 72%, 35% 74%, 40% 75%, 45% 75%, 50% 75%, 55% 74%, 60% 72%, 65% 70%, 70% 68%, 75% 65%, 80% 63%, 85% 61%, 90% 60%,100% 60%, 100% 100%, 0% 100%);  }\n      15% { clip-path: polygon(0% 61%, 5% 63%, 10% 65%, 15% 68%, 20% 70%, 25% 72%, 30% 74%, 35% 75%, 40% 75%, 45% 75%, 50% 74%, 55% 72%, 60% 70%, 65% 68%, 70% 65%, 75% 63%, 80% 61%, 85% 60%, 90% 60%,100% 60%, 100% 100%, 0% 100%);  }\n      10% { clip-path: polygon(0% 63%, 5% 65%, 10% 68%, 15% 70%, 20% 72%, 25% 74%, 30% 75%, 35% 75%, 40% 75%, 45% 74%, 50% 72%, 55% 70%, 60% 68%, 65% 65%, 70% 63%, 75% 61%, 80% 60%, 85% 60%, 90% 60%,100% 61%, 100% 100%, 0% 100%);  }\n      5% { clip-path: polygon(0% 65%, 5% 68%, 10% 70%, 15% 72%, 20% 74%, 25% 75%, 30% 75%, 35% 75%, 40% 74%, 45% 72%, 50% 70%, 55% 68%, 60% 65%, 65% 63%, 70% 61%, 75% 60%, 80% 60%, 85% 60%, 90% 61%,100% 63%, 100% 100%, 0% 100%);  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: linear-gradient(\n    to top right,\n    ${background1},\n    ${background2}\n  );\n  .waves {\n    color: ${(props) => (props.colorSwap ? (props) => props.waveColor : color)};\n    /* -webkit-text-stroke: 1px #fff; */\n    position: relative;\n  }\n  .waves:after {\n    content: attr(data-word);\n    animation-name: ${waves};\n    animation-play-state: ${(props) => props.animationState};\n    animation-duration: 4s;\n    animation-iteration-count: infinite;\n    animation-direction: backwards;\n    position: absolute;\n    top: 0;\n    left: 0;\n    color: ${(props) => (props.colorSwap ? color : (props) => props.waveColor)};\n  }\n  .screen {\n    @media (max-width: 519px) {\n      display: none;\n    }\n  }\n  .mobile {\n    @media (min-width: 520px) {\n      display: none;\n      margin-top: 10vh;\n    }\n  }\n  .hide {\n    opacity: 0;\n  }\n  button {\n    text-align: center;\n    display: inline-block;\n    border: none;\n    padding: 1rem 2rem;\n    background: transparent;\n    cursor: pointer;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    outline: none;\n    margin: 20vh 0 10px 0;\n  }\n  h1 {\n    margin: 0;\n    font-size: max(7vw, 30px);\n    cursor: pointer;\n    @media (max-width: 519px) {\n      font-size: max(14vw, 30px);\n    }\n  }\n  h3 {\n    text-align: center;\n    font-size: max(2.5vw, 18px);\n    /* opacity: ${(props) => props.statementOpacity}; */\n    transition: opacity 5s;\n    margin: 40px 10px;\n    color: ${(props) => (props.colorSwap ? (props) => props.waveColor : color)};\n    @media (max-width: 519px) {\n      margin-top: 20px;\n    }\n  }\n  a {\n    opacity: ${(props) => props.buttonOpacity};\n    text-align: center;\n    margin-top: 25vh;\n    text-decoration: none;\n    color: ${(props) => (props.colorSwap ? (props) => props.waveColor : color)};\n    border: 1px solid\n      ${(props) => (props.colorSwap ? (props) => props.waveColor : color)};\n    border-radius: 5px;\n    padding: 0.6rem 1.6rem;\n    transition: opacity 4s, background-color 0.5s;\n    font-weight: bold;\n    &:hover {\n      background-color: ${(props) =>\n        props.colorSwap ? color : (props) => props.waveColor};\n    }\n    @media (max-width: 519px) {\n      margin-top: 15vh;\n    }\n  }\n`;\n","import \"./App.css\";\nimport Homepage from \"./pages/homepage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}